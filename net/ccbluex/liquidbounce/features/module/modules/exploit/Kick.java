//Deobfuscated with https://github.com/PetoPetko/Minecraft-Deobfuscator3000 using mappings "mcp_stable-22-1.8.9"!

package net.ccbluex.liquidbounce.features.module.modules.exploit;

import java.util.Random;
import kotlin.Metadata;
import kotlin.TypeCastException;
import kotlin.jvm.internal.DoubleCompanionObject;
import kotlin.jvm.internal.Intrinsics;
import net.ccbluex.liquidbounce.features.module.Module;
import net.ccbluex.liquidbounce.features.module.ModuleCategory;
import net.ccbluex.liquidbounce.features.module.ModuleInfo;
import net.ccbluex.liquidbounce.utils.ClientUtils;
import net.ccbluex.liquidbounce.utils.MinecraftInstance;
import net.ccbluex.liquidbounce.value.ListValue;
import net.minecraft.client.Minecraft;
import net.minecraft.entity.Entity;
import net.minecraft.network.Packet;
import net.minecraft.network.play.client.C02PacketUseEntity;
import net.minecraft.network.play.client.C02PacketUseEntity.Action;
import net.minecraft.network.play.client.C03PacketPlayer.C04PacketPlayerPosition;

@Metadata(
   mv = {1, 1, 16},
   bv = {1, 0, 3},
   k = 1,
   d1 = {"\u0000\u0018\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0000\n\u0002\u0010\u0002\n\u0000\b\u0007\u0018\u00002\u00020\u0001B\u0005¢\u0006\u0002\u0010\u0002J\b\u0010\u0005\u001a\u00020\u0006H\u0016R\u000e\u0010\u0003\u001a\u00020\u0004X\u0082\u0004¢\u0006\u0002\n\u0000¨\u0006\u0007"},
   d2 = {"Lnet/ccbluex/liquidbounce/features/module/modules/exploit/Kick;", "Lnet/ccbluex/liquidbounce/features/module/Module;", "()V", "modeValue", "Lnet/ccbluex/liquidbounce/value/ListValue;", "onEnable", "", "LiquidSense"}
)
@ModuleInfo(
   name = "Kick",
   description = "Allows you to kick yourself from a server.",
   category = ModuleCategory.EXPLOIT,
   canEnable = false
)
public final class Kick extends Module {
   // $FF: synthetic field
   private final ListValue modeValue = new ListValue("Mode", new String[]{"Quit", "InvalidPacket", "SelfHurt", "IllegalChat", "PacketSpam"}, "Quit");

   public void onEnable() {
      Minecraft var10000 = access$getMc$p$s1046033730();
      Intrinsics.checkExpressionValueIsNotNull(var10000, "mc");
      if (var10000.isIntegratedServerRunning()) {
         ClientUtils.displayChatMessage("§c§lError: §aYou can't enable §c§l'Kick' §ain SinglePlayer.");
      } else {
         long llIIIIIlllIllIl = (String)llIIIIIlllIlllI.modeValue.get();
         Exception llIIIIIlllIllII = false;
         if (llIIIIIlllIllIl == null) {
            throw new TypeCastException("null cannot be cast to non-null type java.lang.String");
         } else {
            String var10 = llIIIIIlllIllIl.toLowerCase();
            Intrinsics.checkExpressionValueIsNotNull(var10, "(this as java.lang.String).toLowerCase()");
            llIIIIIlllIllIl = var10;
            switch(llIIIIIlllIllIl.hashCode()) {
            case -1647903794:
               if (llIIIIIlllIllIl.equals("illegalchat")) {
                  access$getMc$p$s1046033730().thePlayer.sendChatMessage(String.valueOf((new StringBuilder()).append(String.valueOf((new Random()).nextInt())).append("§§§").append((new Random()).nextInt())));
               }
               break;
            case -367089345:
               if (llIIIIIlllIllIl.equals("invalidpacket")) {
                  var10000 = access$getMc$p$s1046033730();
                  Intrinsics.checkExpressionValueIsNotNull(var10000, "mc");
                  var10000.getNetHandler().addToSendQueue((Packet)(new C04PacketPlayerPosition(DoubleCompanionObject.INSTANCE.getNaN(), DoubleCompanionObject.INSTANCE.getNEGATIVE_INFINITY(), DoubleCompanionObject.INSTANCE.getPOSITIVE_INFINITY(), !access$getMc$p$s1046033730().thePlayer.onGround)));
               }
               break;
            case 3482191:
               if (llIIIIIlllIllIl.equals("quit")) {
                  access$getMc$p$s1046033730().theWorld.sendQuittingDisconnectingPacket();
               }
               break;
            case 156286929:
               if (llIIIIIlllIllIl.equals("packetspam")) {
                  Exception llIIIIIlllIllII = 9999;
                  short llIIIIIlllIlIll = false;
                  int llIIIIIlllIlIlI = false;
                  int llIIIIIlllIlIlI = 0;

                  for(short llIIIIIlllIlIIl = llIIIIIlllIllII; llIIIIIlllIlIlI < llIIIIIlllIlIIl; ++llIIIIIlllIlIlI) {
                     short llIIIIIlllIIlll = false;
                     var10000 = access$getMc$p$s1046033730();
                     Intrinsics.checkExpressionValueIsNotNull(var10000, "mc");
                     var10000.getNetHandler().addToSendQueue((Packet)(new C04PacketPlayerPosition((double)llIIIIIlllIlIlI, (double)llIIIIIlllIlIlI, (double)llIIIIIlllIlIlI, (new Random()).nextBoolean())));
                  }
               }
               break;
            case 1192645979:
               if (llIIIIIlllIllIl.equals("selfhurt")) {
                  var10000 = access$getMc$p$s1046033730();
                  Intrinsics.checkExpressionValueIsNotNull(var10000, "mc");
                  var10000.getNetHandler().addToSendQueue((Packet)(new C02PacketUseEntity((Entity)access$getMc$p$s1046033730().thePlayer, Action.ATTACK)));
               }
            }

         }
      }
   }

   // $FF: synthetic method
   public static final Minecraft access$getMc$p$s1046033730() {
      return MinecraftInstance.mc;
   }
}
