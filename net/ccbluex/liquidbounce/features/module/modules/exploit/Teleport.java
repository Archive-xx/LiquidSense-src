//Deobfuscated with https://github.com/PetoPetko/Minecraft-Deobfuscator3000 using mappings "mcp_stable-22-1.8.9"!

package net.ccbluex.liquidbounce.features.module.modules.exploit;

import java.awt.Color;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import net.ccbluex.liquidbounce.event.EventTarget;
import net.ccbluex.liquidbounce.event.MoveEvent;
import net.ccbluex.liquidbounce.event.PacketEvent;
import net.ccbluex.liquidbounce.event.Render3DEvent;
import net.ccbluex.liquidbounce.event.UpdateEvent;
import net.ccbluex.liquidbounce.features.module.Module;
import net.ccbluex.liquidbounce.features.module.ModuleCategory;
import net.ccbluex.liquidbounce.features.module.ModuleInfo;
import net.ccbluex.liquidbounce.utils.ClientUtils;
import net.ccbluex.liquidbounce.utils.MovementUtils;
import net.ccbluex.liquidbounce.utils.PathUtils;
import net.ccbluex.liquidbounce.utils.block.BlockUtils;
import net.ccbluex.liquidbounce.utils.render.RenderUtils;
import net.ccbluex.liquidbounce.utils.timer.TickTimer;
import net.ccbluex.liquidbounce.value.ListValue;
import net.minecraft.block.BlockAir;
import net.minecraft.block.material.Material;
import net.minecraft.client.entity.EntityPlayerSP;
import net.minecraft.client.renderer.GlStateManager;
import net.minecraft.client.renderer.entity.RenderManager;
import net.minecraft.network.Packet;
import net.minecraft.network.play.client.C03PacketPlayer;
import net.minecraft.network.play.client.C0BPacketEntityAction;
import net.minecraft.network.play.client.C03PacketPlayer.C04PacketPlayerPosition;
import net.minecraft.network.play.client.C03PacketPlayer.C06PacketPlayerPosLook;
import net.minecraft.network.play.client.C0BPacketEntityAction.Action;
import net.minecraft.util.AxisAlignedBB;
import net.minecraft.util.BlockPos;
import net.minecraft.util.MovingObjectPosition;
import org.lwjgl.input.Mouse;
import org.lwjgl.opengl.GL11;

@ModuleInfo(
   name = "Teleport",
   description = "Allows you to teleport around.",
   category = ModuleCategory.EXPLOIT
)
public class Teleport extends Module {
   // $FF: synthetic field
   private final TickTimer flyTimer = new TickTimer();
   // $FF: synthetic field
   private final ListValue buttonValue = new ListValue("Button", new String[]{"Left", "Right", "Middle"}, "Middle");
   // $FF: synthetic field
   private TickTimer freezeTimer = new TickTimer();
   // $FF: synthetic field
   private MovingObjectPosition objectPosition;
   // $FF: synthetic field
   private BlockPos endPos;
   // $FF: synthetic field
   private boolean disableLogger = false;
   // $FF: synthetic field
   private boolean zitter = false;
   // $FF: synthetic field
   private boolean freeze = false;
   // $FF: synthetic field
   private final ListValue modeValue = new ListValue("Mode", new String[]{"Blink", "Flag", "Rewinside", "OldRewinside", "Spoof", "Minesucht", "AAC3.5.0"}, "Blink");
   // $FF: synthetic field
   private boolean doTeleport = false;
   // $FF: synthetic field
   private boolean hadGround;
   // $FF: synthetic field
   private int delay;
   // $FF: synthetic field
   private final List<Packet<?>> packets = new ArrayList();

   @EventTarget
   public void onMove(MoveEvent lllllllllllllllllllIlIIlIIIIlIll) {
      if ("aac3.5.0".equals(((String)lllllllllllllllllllIlIIlIIIIllIl.modeValue.get()).toLowerCase()) && lllllllllllllllllllIlIIlIIIIllIl.freeze) {
         lllllllllllllllllllIlIIlIIIIlIll.zeroXZ();
      }

   }

   @EventTarget
   public void onPacket(PacketEvent lllllllllllllllllllIlIIIllllIIII) {
      Packet<?> lllllllllllllllllllIlIIIlllIllll = lllllllllllllllllllIlIIIllllIIII.getPacket();
      if (!lllllllllllllllllllIlIIIllllIIIl.disableLogger) {
         if (lllllllllllllllllllIlIIIlllIllll instanceof C03PacketPlayer) {
            short lllllllllllllllllllIlIIIlllIlllI = (C03PacketPlayer)lllllllllllllllllllIlIIIlllIllll;
            Exception lllllllllllllllllllIlIIIlllIllIl = ((String)lllllllllllllllllllIlIIIllllIIIl.modeValue.get()).toLowerCase();
            short lllllllllllllllllllIlIIIlllIllII = -1;
            switch(lllllllllllllllllllIlIIIlllIllIl.hashCode()) {
            case 109651721:
               if (lllllllllllllllllllIlIIIlllIllIl.equals("spoof")) {
                  lllllllllllllllllllIlIIIlllIllII = 0;
               }
               break;
            case 325230105:
               if (lllllllllllllllllllIlIIIlllIllIl.equals("aac3.5.0")) {
                  lllllllllllllllllllIlIIIlllIllII = 1;
               }
            }

            switch(lllllllllllllllllllIlIIIlllIllII) {
            case 0:
               if (lllllllllllllllllllIlIIIllllIIIl.endPos != null) {
                  lllllllllllllllllllIlIIIlllIlllI.x = (double)lllllllllllllllllllIlIIIllllIIIl.endPos.getX() + 0.5D;
                  lllllllllllllllllllIlIIIlllIlllI.y = (double)(lllllllllllllllllllIlIIIllllIIIl.endPos.getY() + 1);
                  lllllllllllllllllllIlIIIlllIlllI.z = (double)lllllllllllllllllllIlIIIllllIIIl.endPos.getZ() + 0.5D;
                  mc.thePlayer.setPosition((double)lllllllllllllllllllIlIIIllllIIIl.endPos.getX() + 0.5D, (double)(lllllllllllllllllllIlIIIllllIIIl.endPos.getY() + 1), (double)lllllllllllllllllllIlIIIllllIIIl.endPos.getZ() + 0.5D);
               }
               break;
            case 1:
               if (!lllllllllllllllllllIlIIIllllIIIl.flyTimer.hasTimePassed(60)) {
                  return;
               }

               lllllllllllllllllllIlIIIllllIIII.cancelEvent();
               if (!(lllllllllllllllllllIlIIIlllIllll instanceof C04PacketPlayerPosition) && !(lllllllllllllllllllIlIIIlllIllll instanceof C06PacketPlayerPosLook)) {
                  return;
               }

               lllllllllllllllllllIlIIIllllIIIl.packets.add(lllllllllllllllllllIlIIIlllIllll);
               boolean var10001 = false;
            }
         }

      }
   }

   public void onEnable() {
      if (((String)lllllllllllllllllllIlIIlllIlIlII.modeValue.get()).equalsIgnoreCase("AAC3.5.0")) {
         ClientUtils.displayChatMessage("§c>>> §a§lTeleport §fAAC 3.5.0 §c<<<");
         ClientUtils.displayChatMessage(String.valueOf((new StringBuilder()).append("§cHow to teleport: §aPress ").append((String)lllllllllllllllllllIlIIlllIlIlII.buttonValue.get()).append(" mouse button.")));
         ClientUtils.displayChatMessage("§cHow to cancel teleport: §aDisable teleport module.");
      }

   }

   @EventTarget
   public void onUpdate(UpdateEvent lllllllllllllllllllIlIIlIlIlIIIl) {
      long lllllllllllllllllllIlIIlIlIIlllI = Arrays.asList(lllllllllllllllllllIlIIlIlIlIIlI.buttonValue.getValues()).indexOf(lllllllllllllllllllIlIIlIlIlIIlI.buttonValue.get());
      if (((String)lllllllllllllllllllIlIIlIlIlIIlI.modeValue.get()).equals("AAC3.5.0")) {
         lllllllllllllllllllIlIIlIlIlIIlI.freezeTimer.update();
         if (lllllllllllllllllllIlIIlIlIlIIlI.freeze && lllllllllllllllllllIlIIlIlIlIIlI.freezeTimer.hasTimePassed(40)) {
            lllllllllllllllllllIlIIlIlIlIIlI.freezeTimer.reset();
            lllllllllllllllllllIlIIlIlIlIIlI.freeze = false;
            lllllllllllllllllllIlIIlIlIlIIlI.setState(false);
         }

         if (!lllllllllllllllllllIlIIlIlIlIIlI.flyTimer.hasTimePassed(60)) {
            lllllllllllllllllllIlIIlIlIlIIlI.flyTimer.update();
            if (mc.thePlayer.onGround) {
               mc.thePlayer.jump();
            } else {
               MovementUtils.forward(lllllllllllllllllllIlIIlIlIlIIlI.zitter ? -0.21D : 0.21D);
               lllllllllllllllllllIlIIlIlIlIIlI.zitter = !lllllllllllllllllllIlIIlIlIlIIlI.zitter;
            }

            lllllllllllllllllllIlIIlIlIlIIlI.hadGround = false;
         } else {
            if (mc.thePlayer.onGround) {
               lllllllllllllllllllIlIIlIlIlIIlI.hadGround = true;
            }

            if (lllllllllllllllllllIlIIlIlIlIIlI.hadGround) {
               if (mc.thePlayer.onGround) {
                  mc.thePlayer.setPositionAndUpdate(mc.thePlayer.posX, mc.thePlayer.posY + 0.2D, mc.thePlayer.posZ);
               }

               float lllllllllllllllllllIlIIlIlIlIlll = 2.0F;
               mc.thePlayer.capabilities.isFlying = false;
               mc.thePlayer.motionY = 0.0D;
               mc.thePlayer.motionX = 0.0D;
               mc.thePlayer.motionZ = 0.0D;
               EntityPlayerSP var10000;
               if (mc.gameSettings.keyBindJump.isKeyDown()) {
                  var10000 = mc.thePlayer;
                  var10000.motionY += 2.0D;
               }

               if (mc.gameSettings.keyBindSneak.isKeyDown()) {
                  var10000 = mc.thePlayer;
                  var10000.motionY -= 2.0D;
               }

               MovementUtils.strafe(2.0F);
               if (Mouse.isButtonDown(lllllllllllllllllllIlIIlIlIIlllI) && !lllllllllllllllllllIlIIlIlIlIIlI.doTeleport) {
                  mc.thePlayer.setPositionAndUpdate(mc.thePlayer.posX, mc.thePlayer.posY - 11.0D, mc.thePlayer.posZ);
                  lllllllllllllllllllIlIIlIlIlIIlI.disableLogger = true;
                  lllllllllllllllllllIlIIlIlIlIIlI.packets.forEach((lllllllllllllllllllIlIIIllIIllII) -> {
                     mc.getNetHandler().addToSendQueue(lllllllllllllllllllIlIIIllIIllII);
                  });
                  lllllllllllllllllllIlIIlIlIlIIlI.freezeTimer.reset();
                  lllllllllllllllllllIlIIlIlIlIIlI.freeze = true;
               }

               lllllllllllllllllllIlIIlIlIlIIlI.doTeleport = Mouse.isButtonDown(lllllllllllllllllllIlIIlIlIIlllI);
            }
         }
      } else {
         if (mc.currentScreen == null && Mouse.isButtonDown(lllllllllllllllllllIlIIlIlIIlllI) && lllllllllllllllllllIlIIlIlIlIIlI.delay <= 0) {
            lllllllllllllllllllIlIIlIlIlIIlI.endPos = lllllllllllllllllllIlIIlIlIlIIlI.objectPosition.getBlockPos();
            if (BlockUtils.getBlock(lllllllllllllllllllIlIIlIlIlIIlI.endPos).getMaterial() == Material.air) {
               lllllllllllllllllllIlIIlIlIlIIlI.endPos = null;
               return;
            }

            ClientUtils.displayChatMessage(String.valueOf((new StringBuilder()).append("§7[§8§lTeleport§7] §3Position was set to §8").append(lllllllllllllllllllIlIIlIlIlIIlI.endPos.getX()).append("§3, §8").append(lllllllllllllllllllIlIIlIlIlIIlI.endPos.getY() + 1).append("§3, §8").append(lllllllllllllllllllIlIIlIlIlIIlI.endPos.getZ())));
            lllllllllllllllllllIlIIlIlIlIIlI.delay = 6;
         }

         if (lllllllllllllllllllIlIIlIlIlIIlI.delay > 0) {
            --lllllllllllllllllllIlIIlIlIlIIlI.delay;
         }

         if (lllllllllllllllllllIlIIlIlIlIIlI.endPos != null) {
            double lllllllllllllllllllIlIIlIlIlIlIl = (double)lllllllllllllllllllIlIIlIlIlIIlI.endPos.getX() + 0.5D;
            double lllllllllllllllllllIlIIlIlIlIlII = (double)lllllllllllllllllllIlIIlIlIlIIlI.endPos.getY() + 1.0D;
            double lllllllllllllllllllIlIIlIlIlIIll = (double)lllllllllllllllllllIlIIlIlIlIIlI.endPos.getZ() + 0.5D;
            Exception lllllllllllllllllllIlIIlIlIIlIlI = ((String)lllllllllllllllllllIlIIlIlIlIIlI.modeValue.get()).toLowerCase();
            short lllllllllllllllllllIlIIlIlIIlIIl = -1;
            switch(lllllllllllllllllllIlIIlIlIIlIlI.hashCode()) {
            case -436679847:
               if (lllllllllllllllllllIlIIlIlIIlIlI.equals("oldrewinside")) {
                  lllllllllllllllllllIlIIlIlIIlIIl = 3;
               }
               break;
            case 3145580:
               if (lllllllllllllllllllIlIIlIlIIlIlI.equals("flag")) {
                  lllllllllllllllllllIlIIlIlIIlIIl = 1;
               }
               break;
            case 93826908:
               if (lllllllllllllllllllIlIIlIlIIlIlI.equals("blink")) {
                  lllllllllllllllllllIlIIlIlIIlIIl = 0;
               }
               break;
            case 709940890:
               if (lllllllllllllllllllIlIIlIlIIlIlI.equals("minesucht")) {
                  lllllllllllllllllllIlIIlIlIIlIIl = 4;
               }
               break;
            case 1388740000:
               if (lllllllllllllllllllIlIIlIlIIlIlI.equals("rewinside")) {
                  lllllllllllllllllllIlIIlIlIIlIIl = 2;
               }
            }

            switch(lllllllllllllllllllIlIIlIlIIlIIl) {
            case 0:
               if (mc.thePlayer.isSneaking()) {
                  mc.getNetHandler().addToSendQueue(new C0BPacketEntityAction(mc.thePlayer, Action.STOP_SNEAKING));
                  PathUtils.findBlinkPath(lllllllllllllllllllIlIIlIlIlIlIl, lllllllllllllllllllIlIIlIlIlIlII, lllllllllllllllllllIlIIlIlIlIIll).forEach((lllllllllllllllllllIlIIIllIIlllI) -> {
                     mc.getNetHandler().addToSendQueue(new C04PacketPlayerPosition(lllllllllllllllllllIlIIIllIIlllI.x, lllllllllllllllllllIlIIIllIIlllI.y, lllllllllllllllllllIlIIIllIIlllI.z, true));
                     mc.thePlayer.setPosition(lllllllllllllllllllIlIIlIlIlIlIl, lllllllllllllllllllIlIIlIlIlIlII, lllllllllllllllllllIlIIlIlIlIIll);
                  });
                  mc.getNetHandler().addToSendQueue(new C0BPacketEntityAction(mc.thePlayer, Action.START_SNEAKING));
                  ClientUtils.displayChatMessage(String.valueOf((new StringBuilder()).append("§7[§8§lTeleport§7] §3You were teleported to §8").append(lllllllllllllllllllIlIIlIlIlIlIl).append("§3, §8").append(lllllllllllllllllllIlIIlIlIlIlII).append("§3, §8").append(lllllllllllllllllllIlIIlIlIlIIll)));
               }
               break;
            case 1:
               if (mc.thePlayer.isSneaking()) {
                  mc.getNetHandler().addToSendQueue(new C0BPacketEntityAction(mc.thePlayer, Action.STOP_SNEAKING));
                  mc.getNetHandler().addToSendQueue(new C04PacketPlayerPosition(mc.thePlayer.posX, mc.thePlayer.posY, mc.thePlayer.posZ, true));
                  mc.getNetHandler().addToSendQueue(new C04PacketPlayerPosition(lllllllllllllllllllIlIIlIlIlIlIl, lllllllllllllllllllIlIIlIlIlIlII, lllllllllllllllllllIlIIlIlIlIIll, true));
                  mc.getNetHandler().addToSendQueue(new C04PacketPlayerPosition(mc.thePlayer.posX, mc.thePlayer.posY, mc.thePlayer.posZ, true));
                  mc.getNetHandler().addToSendQueue(new C04PacketPlayerPosition(mc.thePlayer.posX, mc.thePlayer.posY + 5.0D, mc.thePlayer.posZ, true));
                  mc.getNetHandler().addToSendQueue(new C04PacketPlayerPosition(lllllllllllllllllllIlIIlIlIlIlIl, lllllllllllllllllllIlIIlIlIlIlII, lllllllllllllllllllIlIIlIlIlIIll, true));
                  mc.getNetHandler().addToSendQueue(new C04PacketPlayerPosition(mc.thePlayer.posX + 0.5D, mc.thePlayer.posY, mc.thePlayer.posZ + 0.5D, true));
                  MovementUtils.forward(0.04D);
                  mc.getNetHandler().addToSendQueue(new C0BPacketEntityAction(mc.thePlayer, Action.START_SNEAKING));
                  ClientUtils.displayChatMessage(String.valueOf((new StringBuilder()).append("§7[§8§lTeleport§7] §3You were teleported to §8").append(lllllllllllllllllllIlIIlIlIlIlIl).append("§3, §8").append(lllllllllllllllllllIlIIlIlIlIlII).append("§3, §8").append(lllllllllllllllllllIlIIlIlIlIIll)));
               }
               break;
            case 2:
               mc.thePlayer.motionY = 0.1D;
               mc.getNetHandler().addToSendQueue(new C04PacketPlayerPosition(lllllllllllllllllllIlIIlIlIlIlIl, lllllllllllllllllllIlIIlIlIlIlII, lllllllllllllllllllIlIIlIlIlIIll, true));
               mc.getNetHandler().addToSendQueue(new C04PacketPlayerPosition(mc.thePlayer.posX, mc.thePlayer.posY + 0.6D, mc.thePlayer.posZ, true));
               if ((int)mc.thePlayer.posX == (int)lllllllllllllllllllIlIIlIlIlIlIl && (int)mc.thePlayer.posY == (int)lllllllllllllllllllIlIIlIlIlIlII && (int)mc.thePlayer.posZ == (int)lllllllllllllllllllIlIIlIlIlIIll) {
                  ClientUtils.displayChatMessage(String.valueOf((new StringBuilder()).append("§7[§8§lTeleport§7] §3You were teleported to §8").append(lllllllllllllllllllIlIIlIlIlIlIl).append("§3, §8").append(lllllllllllllllllllIlIIlIlIlIlII).append("§3, §8").append(lllllllllllllllllllIlIIlIlIlIIll)));
                  lllllllllllllllllllIlIIlIlIlIIlI.endPos = null;
               } else {
                  ClientUtils.displayChatMessage("§7[§8§lTeleport§7] §3Teleport try...");
               }
               break;
            case 3:
               mc.thePlayer.motionY = 0.1D;
               mc.getNetHandler().addToSendQueue(new C04PacketPlayerPosition(mc.thePlayer.posX, mc.thePlayer.posY, mc.thePlayer.posZ, true));
               mc.getNetHandler().addToSendQueue(new C04PacketPlayerPosition(lllllllllllllllllllIlIIlIlIlIlIl, lllllllllllllllllllIlIIlIlIlIlII, lllllllllllllllllllIlIIlIlIlIIll, true));
               mc.getNetHandler().addToSendQueue(new C04PacketPlayerPosition(mc.thePlayer.posX, mc.thePlayer.posY, mc.thePlayer.posZ, true));
               mc.getNetHandler().addToSendQueue(new C04PacketPlayerPosition(mc.thePlayer.posX, mc.thePlayer.posY, mc.thePlayer.posZ, true));
               mc.getNetHandler().addToSendQueue(new C04PacketPlayerPosition(lllllllllllllllllllIlIIlIlIlIlIl, lllllllllllllllllllIlIIlIlIlIlII, lllllllllllllllllllIlIIlIlIlIIll, true));
               mc.getNetHandler().addToSendQueue(new C04PacketPlayerPosition(mc.thePlayer.posX, mc.thePlayer.posY, mc.thePlayer.posZ, true));
               if ((int)mc.thePlayer.posX == (int)lllllllllllllllllllIlIIlIlIlIlIl && (int)mc.thePlayer.posY == (int)lllllllllllllllllllIlIIlIlIlIlII && (int)mc.thePlayer.posZ == (int)lllllllllllllllllllIlIIlIlIlIIll) {
                  ClientUtils.displayChatMessage(String.valueOf((new StringBuilder()).append("§7[§8§lTeleport§7] §3You were teleported to §8").append(lllllllllllllllllllIlIIlIlIlIlIl).append("§3, §8").append(lllllllllllllllllllIlIIlIlIlIlII).append("§3, §8").append(lllllllllllllllllllIlIIlIlIlIIll)));
                  lllllllllllllllllllIlIIlIlIlIIlI.endPos = null;
               } else {
                  ClientUtils.displayChatMessage("§7[§8§lTeleport§7] §3Teleport try...");
               }

               MovementUtils.forward(0.04D);
               break;
            case 4:
               if (mc.thePlayer.isSneaking()) {
                  mc.getNetHandler().addToSendQueue(new C04PacketPlayerPosition(lllllllllllllllllllIlIIlIlIlIlIl, lllllllllllllllllllIlIIlIlIlIlII, lllllllllllllllllllIlIIlIlIlIIll, true));
                  ClientUtils.displayChatMessage(String.valueOf((new StringBuilder()).append("§7[§8§lTeleport§7] §3You were teleported to §8").append(lllllllllllllllllllIlIIlIlIlIlIl).append("§3, §8").append(lllllllllllllllllllIlIIlIlIlIlII).append("§3, §8").append(lllllllllllllllllllIlIIlIlIlIIll)));
               }
            }
         }

      }
   }

   public void onDisable() {
      lllllllllllllllllllIlIIlllIIlIll.delay = 0;
      lllllllllllllllllllIlIIlllIIlIll.endPos = null;
      lllllllllllllllllllIlIIlllIIlIll.hadGround = false;
      lllllllllllllllllllIlIIlllIIlIll.freeze = false;
      lllllllllllllllllllIlIIlllIIlIll.disableLogger = false;
      lllllllllllllllllllIlIIlllIIlIll.flyTimer.reset();
      lllllllllllllllllllIlIIlllIIlIll.packets.clear();
      super.onDisable();
   }

   @EventTarget
   public void onRender3D(Render3DEvent lllllllllllllllllllIlIIlIIlIIIIl) {
      if (!((String)lllllllllllllllllllIlIIlIIlIIlll.modeValue.get()).equals("AAC3.5.0")) {
         lllllllllllllllllllIlIIlIIlIIlll.objectPosition = mc.thePlayer.rayTrace(1000.0D, lllllllllllllllllllIlIIlIIlIIIIl.getPartialTicks());
         if (lllllllllllllllllllIlIIlIIlIIlll.objectPosition.getBlockPos() != null) {
            int lllllllllllllllllllIlIIlIIlIIlIl = lllllllllllllllllllIlIIlIIlIIlll.objectPosition.getBlockPos().getX();
            Exception lllllllllllllllllllIlIIlIIIlllll = lllllllllllllllllllIlIIlIIlIIlll.objectPosition.getBlockPos().getY();
            Exception lllllllllllllllllllIlIIlIIIlllIl = lllllllllllllllllllIlIIlIIlIIlll.objectPosition.getBlockPos().getZ();
            if (!(BlockUtils.getBlock(lllllllllllllllllllIlIIlIIlIIlll.objectPosition.getBlockPos()) instanceof BlockAir)) {
               RenderManager lllllllllllllllllllIlIIlIIlIlIII = mc.getRenderManager();
               GL11.glBlendFunc(770, 771);
               GL11.glEnable(3042);
               GL11.glLineWidth(2.0F);
               GL11.glDisable(3553);
               GL11.glDisable(2929);
               GL11.glDepthMask(false);
               RenderUtils.glColor(((String)lllllllllllllllllllIlIIlIIlIIlll.modeValue.get()).equalsIgnoreCase("minesucht") && mc.thePlayer.getPosition().getY() != lllllllllllllllllllIlIIlIIIlllll + 1 ? new Color(255, 0, 0, 90) : (BlockUtils.getBlock(lllllllllllllllllllIlIIlIIlIIlll.objectPosition.getBlockPos().up()).getMaterial() != Material.air ? new Color(255, 0, 0, 90) : new Color(0, 255, 0, 90)));
               RenderUtils.drawFilledBox(new AxisAlignedBB((double)lllllllllllllllllllIlIIlIIlIIlIl - lllllllllllllllllllIlIIlIIlIlIII.renderPosX, (double)(lllllllllllllllllllIlIIlIIIlllll + 1) - lllllllllllllllllllIlIIlIIlIlIII.renderPosY, (double)lllllllllllllllllllIlIIlIIIlllIl - lllllllllllllllllllIlIIlIIlIlIII.renderPosZ, (double)lllllllllllllllllllIlIIlIIlIIlIl - lllllllllllllllllllIlIIlIIlIlIII.renderPosX + 1.0D, (double)lllllllllllllllllllIlIIlIIIlllll + 1.2D - lllllllllllllllllllIlIIlIIlIlIII.renderPosY, (double)lllllllllllllllllllIlIIlIIIlllIl - lllllllllllllllllllIlIIlIIlIlIII.renderPosZ + 1.0D));
               GL11.glEnable(3553);
               GL11.glEnable(2929);
               GL11.glDepthMask(true);
               GL11.glDisable(3042);
               RenderUtils.renderNameTag(String.valueOf((new StringBuilder()).append(Math.round(mc.thePlayer.getDistance((double)lllllllllllllllllllIlIIlIIlIIlIl, (double)lllllllllllllllllllIlIIlIIIlllll, (double)lllllllllllllllllllIlIIlIIIlllIl))).append("m")), (double)lllllllllllllllllllIlIIlIIlIIlIl + 0.5D, (double)lllllllllllllllllllIlIIlIIIlllll + 1.7D, (double)lllllllllllllllllllIlIIlIIIlllIl + 0.5D);
               GlStateManager.resetColor();
            }

         }
      }
   }

   public String getTag() {
      return (String)lllllllllllllllllllIlIIIlllIIlII.modeValue.get();
   }
}
